<!-- Admin.razor -->
@page "/Admin"
@inject UserManager<IdentityUser> UserManager
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore;
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize(Roles = "Admin")]
@using SHoper.Component

@if (Users != null && Users.Any())
{

    <table class="table">
        <thead>
            <tr>
                <th>Username</th>
                <th>Email</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Users)
            {
                <tr>
                    <td>@user.UserName</td>
                    <td>@user.Email</td>
                    <td>
                        <button class="button" @onclick="() => RedirectToNextPage(user.Id)">Click me</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No users found.</p>
}

@code {
    private string userId;
    public List<IdentityUser> Users { get; set; }
    private bool showForm = false;
    private IdentityUser user;
    private IdentityUser selectedUser; // Track the selected user for the form

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var userPrincipal = authState.User;

        if (userPrincipal.Identity.IsAuthenticated)
        {
            var user = await UserManager.GetUserAsync(userPrincipal);
            userId = user.Id.ToString();

            Users = await UsersToShow();
        }
    }

    public async Task<List<IdentityUser>> UsersToShow()
    {
        return await UserManager.Users.ToListAsync();
    }

    private void RedirectToNextPage(string userId)
    {
        NavigationManager.NavigateTo($"/NextPage/{Uri.EscapeDataString(userId)}");
    }

}